spring:
  application:
    # 对应config server所获取的配置文件的{application}
    name: Comsumer
  cloud:
    config:
      #获得config的认证有两种方式，一种是curl风格的，如下：
      #uri: http://user:password@localhost:8084
      #另一种是注册了Ereka直接配置：
      username: user
      password: password
      #指定configserver的地址
      #uri: http://localhost:8084 如果都注册到了Eureka，则可省略此步骤
      # profile对应config server所获取的配置文件中的{profile}
      profile: dev
      # 指定Git仓库的分支，对应config server所获取的配置文件的{label}
      label: master
      discovery:
        enabled: true                                  # 表示使用服务发现组件中的Config Server，而不自己指定Config Server的uri，默认false
        service-id: Config  # 指定Config Server在服务发现中的serviceId，默认是configserver
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    prefer-id-address: true

# 参考文档：https://github.com/spring-cloud/spring-cloud-config/blob/master/docs/src/main/asciidoc/spring-cloud-config.adoc#discovery-first-bootstrap

#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
#profile: dev